{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","setSelect","item","setState","handlerSwitch","itemValue","includes","this","className","length","type","onClick","map","good","selected","classNames","event","currentTarget","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,UAAY,WAAgB,IAAfC,EAAc,uDAAP,GAClB,EAAKC,SAAS,CACZH,aAAcE,KAPpB,EAWEE,cAAgB,SAACF,EAAcG,GACzBH,EAAKI,SAAS,WAChB,EAAKL,YAEL,EAAKA,UAAUI,IAfrB,4CAmBE,WAAU,IAAD,OACCL,EAAiBO,KAAKR,MAAtBC,aAER,OACE,uBAAMQ,UAAU,oBAAhB,UACGR,EAAaS,OAEV,qBAAID,UAAU,sCAAd,oBACMR,EADN,gBAIE,wBACE,UAAQ,cACRU,KAAK,SACLF,UAAU,cACVG,QAAS,kBAAM,EAAKV,kBAIxB,oBAAIO,UAAU,QAAd,+BAGJ,uBAAOA,UAAU,QAAjB,SACE,gCACGX,EAAMe,KAAI,SAACC,GACV,IAAMC,EAAWD,IAASb,EAE1B,OACE,qBACE,UAAQ,OAERQ,UACEO,IACE,CACE,+BACAD,IAPR,UAYE,6BACE,wBACE,UACEA,EACI,eACA,YAENJ,KAAK,SACLF,UACEO,IACE,SACA,CAAE,UAAWD,IAGjBH,QAAS,SAACK,GACR,EAAKZ,cAAcY,EAAMC,cAAcT,UAAWK,IAdtD,SAiBGC,EAAW,IAAM,QAItB,oBAAI,UAAQ,YAAYN,UAAU,eAAlC,SACGK,MAjCEA,iBAjDvB,GAAyBK,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6d75c73f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  setSelect = (item = '') => {\n    this.setState({\n      selectedGood: item,\n    });\n  };\n\n  handlerSwitch = (item: string, itemValue: string) => {\n    if (item.includes('is-info')) {\n      this.setSelect();\n    } else {\n      this.setSelect(itemValue);\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood.length\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => this.setSelect()}\n              />\n            </h1>\n          ) : (\n            <h1 className=\"title\">No goods selected</h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const selected = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={\n                    classNames(\n                      {\n                        'has-background-success-light':\n                        selected,\n                      },\n                    )\n                  }\n                >\n                  <td>\n                    <button\n                      data-cy={\n                        selected\n                          ? 'RemoveButton'\n                          : 'AddButton'\n                      }\n                      type=\"button\"\n                      className={\n                        classNames(\n                          'button',\n                          { 'is-info': selected },\n                        )\n                      }\n                      onClick={(event) => {\n                        this.handlerSwitch(event.currentTarget.className, good);\n                      }}\n                    >\n                      {selected ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}